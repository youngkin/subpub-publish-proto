%%
{lib_dirs, ["./deps/erlang"]}. 

%%
%% If you have a sys.config file you need to tell relx where it is. If you do
%% that relx will include the sys.config in the appropriate place
%% automatically. For Prospero, the sys.config file will have to be built 
%% dynamically at deployment time.
%%
%%{sys_config, "dev.config"}.

%%
%% If needed you can use a specific vm.args file instead of the
%% one automatically generated by relx.
%%
{vm_args, "./priv/vm.args"}.

%%
%% If needed, you can specify an alternative location for the 
%% application configuration file (the default is a relx
%% generated sys.config file).
%%
{sys_config, "./config/pub_proto.config"}.

%%
%% relx will include src files of your applications, if present, by default.
%% If you don't want to include the src files, set `include_src` to false.
%%
{include_src, false}.

%%
%% When we have multiple releases relx needs to know which one to build. You
%% can specify that on the command line with the `-n` and `-v` arguments to
%% relx. However, it is often more convenient to do it in the config.
%%
{default_release, publish_proto, "0.0.1"}.

%%
%% Provides a start script that allows us to not only start the release, but do so with the node in 
%% the background, or also to allow us to connect to a running node, and so on. This start script 
%% has the same features as the one tools like rebar generates.
%%
{extended_start_script, true}.

%%
%% Specify the release and version to be created.
%% The list of library tuples below (e.g., {amqp_client, load}) tells relx to include these
%% libraries into the release lib directory. The other option is to specify them in the
%% prospero.app.src file but this will cause relx to put them in the boot script which will
%% result in them being started as dependent applications. This can cause startup ordering
%% problems (e.g., Prospero expects to start Mnesia and fails if it was started externally.
%%
{release, {publish_proto, "0.0.1"}, 
   [sasl, 
     %% Needed for observer
     observer,
     wx,
     runtime_tools,
     %% Done with observer apps
     publish_proto,
    {amqp_client, load},
    {rabbit_common, load}
]}.
