{application, publish_proto,
 [
  {description, "Prototype app that simply publishes messages to RabbitMQ."},
  {vsn, "0.1.0"},
  {registered, []},
   %% Not sure, but the ordering in the app list in the applications tuple is
   %% not necessarily the order that the apps are actually started in.
   %% I think relx addresses this by determining the dependencies and starting
   %% the apps in the required order (called "topological ordering" in the relx
   %% docs.
  {applications, [
                  kernel,
                  stdlib,
                  sasl,
                  compiler,
                  syntax_tools,
                  goldrush,
                  lager,
                  lexical_uuid
                 ]},
  {mod, { publish_proto_app, []}},
  %% {modules, []} is needed to make relx happy
  {modules, []},
  {env, []}
 ]}.
